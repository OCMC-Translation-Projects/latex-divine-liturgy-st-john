% Package: ocmc-liturgical-text
% Author: Michael Colburn
% specifies packages and defines new commands for purposes
% of typesetting liturgical books for the Eastern Orthodox Christian Church
% 
% the prefix 'lt' means 'liturgical text'.  This prefix was added to commands to avoid collisions with commands named by other packages.
%
% This package relies on package i18n-topic-key.
% This package dynamically loads a topic file
% when a key is requested.  It only loads it once.
% This package dynamically loads fonts for
% topics that have a language code of ara (Arabic), chu (Church Slavonic), or heb (Hebrew).
%
% TODO
% - Add ltSetColumnSep width, rule width
% - way to set sloppy sloppy spaces. currently hardcode when doing 2 or 3 columns
% - way to set root folder for resources

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{ocmc-liturgical-text}[2016/07/23 Formatting of Eastern Orthodox Christian Liturgical Texts]

\def\my{/ocmc/liturgical/text}% use as pgfkeys path prefix
\def\myLoadedResources{\my/resources/loaded}%
\def\myLoadedFonts{\my/fonts/loaded}%

\RequirePackage{etoolbox}%

%=======================================
% PACKAGE OPTIONS
%=======================================
%% Show keys option
\newbool{debugKeys}%
\boolfalse{debugKeys}%
\DeclareOption{debug}{%
    \booltrue{debugKeys}%
}
%% Show realm option
\newbool{showRealm}%
\boolfalse{showRealm}%
\DeclareOption{showrealm}{%
    \booltrue{showRealm}%
}
%% Support Korean option
\newbool{supportKorean}%
\boolfalse{supportKorean}%
\DeclareOption{korean}{%
    \booltrue{supportKorean}%
}

\ProcessOptions*
\ifbool{debugKeys}{%
    \RequirePackage[debug]{i18n-topic-key}%
}{%
    \RequirePackage{i18n-topic-key}%
}

%=====================================%===========
% Packages
%================================================
\RequirePackage{etex}
\usepackage{comment} % comment out lines with \begin{comment} ... \end{comment}
\usepackage{ragged2e} % so margins can be ragged
\usepackage{titlesec}
\usepackage{parskip}
\usepackage{titling}
\usepackage{trimspaces}
\usepackage[margin=1in]{geometry}%
\usepackage{color}% used by paracol
\RequirePackage{xstring}% for case statements
\usepackage{paracol}% parallel columns
%----------------------------------------------------------------------------------------
%	HYPERLINKS IN THE DOCUMENTS
%----------------------------------------------------------------------------------------
\usepackage{hyperref}%
\hypersetup{%
  hidelinks
%  ,backref=true
%  ,pagebackref=true
%  ,hyperindex=true
  ,colorlinks=true
  ,citecolor=blue
  ,filecolor=blue
  ,linkcolor=blue
  ,urlcolor= ocre
  ,breaklinks=true
%  ,bookmarks=true
  ,bookmarksopen=false
  ,pdftitle={Title}
  ,pdfauthor={Author}
}
\usepackage{bookmark}%
\bookmarksetup{%
open,
numbered,
addtohook={%
\ifnum\bookmarkget{level}=0 % chapter
\bookmarksetup{bold}%
\fi%
\ifnum\bookmarkget{level}=-1 % part
\bookmarksetup{color=ocre,bold}%
\fi%
}%
}
%=============================================
% FONT SETUP
%=============================================
\usepackage{fontspec}%

\def\myFontDir{fonts}%
\usepackage{xcolor}%
\colorlet{RED}{red} % to handle color in headers
\definecolor{ocre}{RGB}{243,102,25} % Define the orange color used for highlighting throughout the book
\definecolor{auburn}{rgb}{0.43, 0.21, 0.1}%

\setmainfont[%
       Path = \myFontDir/Arimo/%
       , BoldFont = Arimo-Bold.ttf% 
       , ItalicFont = Arimo-Italic.ttf%
       , BoldItalicFont = Arimo-BoldItalic.ttf% 
       , Ligatures = TeX]{Arimo-Regular.ttf}%

\ifbool{supportKorean}{%
\usepackage{xeCJK} % for asian languages
\setCJKmainfont{fonts/korean/UnGungseo.ttf}%
\setCJKsansfont{fonts/korean/UnGungseo.ttf}%
\setCJKmonofont{fonts/korean/gulim.ttf}%
}{} 

\newcommand{\ltSetColor}[1]{%
\color{#1}%
}

%=============================================
% Paragraph Formats - NEEDED FOR MULTI COLUMN SUPPORT
%=============================================

\def\ltCenter{%
\Centering%
}%
\def\ltRightJustify{%
\RaggedLeft%
}%
\def\ltLeftJustify{%
\RaggedRight%
}%
\def\ltJustify{%
\justifying%
}%

%=============================================
% TYPEOGRAPHY - NEEDED FOR MULTI COLUMN SUPPORT
%=============================================
\pgfkeys{%
\my/current/typeography/.initial={\color{black}\textnormal}%
}

% call \ltTypeography after calling \ltSetTypeography
\newcommand{\ltSetTypeography}[1]{%
\pgfkeys{\my/current/typeography={#1}%
}%
%\ltTypeography{}%
}
\newcommand{\ltTypeography}{% 
\pgfkeysvalueof{\my/current/typeography}%
}
\newcommand{\ltTempTypeographyDefault}{%
\color{black}\ltTextBlack%
}
\newcommand{\ltSetTypeographyDefault}{%
	\pgfkeys{%
		\my/current/typeography={%
				\ltTextBlack%
		}%
}%
\ltTypeography{}%
}
\newcommand{\ltColor}[1]{%
\color{#1}%
}%
\def\ltTextBlack{\color{black}\mdseries\upshape}%
\def\ltTextBlackBold{\color{black}\bfseries}%
\def\ltTextBlackItalics{\color{black}\itshape}%
\def\ltTextBlackBoldItalics{\color{black}\bfseries\itshape}%
\def\ltTextRed{\color{red}\mdseries\upshape}%
\def\ltTextRedBold{\color{red}\bfseries}%
\def\ltTextRedItalics{\color{red}\itshape}%
\def\ltTextRedBoldItalics{\color{red}\bfseries\itshape}%
\def\ltCapsAndSmallCaps{\scshape}%
\def\ltTextUpright{\upshape}%
\def\ltParaIndent{\indent}%
\def\ltParaNoIndent{\noindent}%

% ============================================
% PARALLEL COLUMNS SETUP
%=============================================
\setlength{\columnsep}{30pt}%
\setlength\columnseprule{0.4pt}%

%============================================
% RIGHT TO LEFT SUPPORT - MUST BE LAST PACKAGE LOADED
%============================================
\usepackage{bidi}% 

%=========================================================
% Custom Commands
%=========================================================
\pgfkeys{%
    \my/resources/.cd%
    , path/.initial=resources%
}

\pgfkeys{%
    \my/current/.cd%
    , left/language/.initial=gr%
    , left/country/.initial=gr%
    , left/realm/.initial=cog%
    , left/text/.initial=
    , center/language/.initial=gr%
    , center/country/.initial=gr%
    , center/realm/.initial=cog%
    , center/text/.initial=
    , right/language/.initial=gr%
    , right/country/.initial=gr%
    , right/realm/.initial=cog%
    , right/text/.initial=
    , cols/.initial=1% 
}
\pgfkeys{%
    \my/domains/.cd%
    , left/.initial=/gr/gr/cog%
    , center/.initial=/gr/gr/cog%
    , right/.initial=/gr/gr/cog%
}
\pgfkeys{%
    \my/column/separator/.cd%
    , rule/color/.initial=gray%
    , rule/width/.initial=0.4%
    , width/.initial=30%
}

%================================================
% RESOURCE LOADING
%================================================

\newcommand{\addResource}[4]{%
    \pgfkeyssetvalue{\myLoadedResources/#1/#2/#3/#4}{true}%
}%

\newcommand{\loadResource}[4]{%
    \IfFileExists{%
        \pgfkeysvalueof{\my/resources/path}/#1_#2_#3/res.#4.tex%
    }{%
        \pgfkeysifdefined{\myLoadedResources/#1/#2/#3/#4}{%
        }{%
        % for some reason, \input adds a space
        \ignorespaces\input{\pgfkeysvalueof{\my/resources/path}/#1_#2_#3/res.#4.tex}\unskip%
        \addResource{#1}{#2}{#3}{#4}%
        }%
    }{% false
        missing \PackageError{ocmc-liturgical-text}{Missing \pgfkeysvalueof{\my/resources/path} #1_#2_#3/res.#4.tex}%
        {%
        Add the missing file.%
        }%    
    }%
}
%================================================
% SPECIAL FONT LOADING
%================================================
\newcommand{\loadArabicFont}{%
\newfontfamily\arabicfont[%
Script=Arabic%
, Path = \myFontDir/Arabic/%
, BoldFont = amiri-bold.ttf%
, ItalicFont = amiri-slanted.ttf% 
, BoldItalicFont = amiri-boldslanted.ttf%
   ]{amiri-regular.ttf}%
}
\newcommand{\loadSlavonicFont}{%
\newfontfamily\slavonicfont[Path = \myFontDir/slavonic/ponomar/]{PonomarUnicode.ttf}%
}
\newcommand{\loadHebrewFont}{%
\newfontfamily\hebrewfont[%
    Script=Hebrew%
    , Path = \myFontDir/hebrew/%
    , BoldFont = ShofarDemi-Bold.ttf% 
    , ItalicFont = ShofarRegularOblique.ttf% 
    , BoldItalicFont = ShofarDemi-BoldOblique.ttf%
       ]{ShofarRegular.ttf}%                
}
\newcommand{\addFont}[1]{%
    \pgfkeyssetvalue{\myLoadedFonts/#1}{true}%
}

\newcommand{\loadFont}[1]{%
    \pgfkeysifdefined{\myLoadedFonts/#1}{%
        % ignore...nothing else to do
    }{% see if we should load a font for this language
        \IfStrEqCase{#1}{%
            {ara}{\loadArabicFont}%
            {chu}{\loadSlavonicFont}%
            {en}{}%
            {gr}{}%
            {heb}{\loadHebrewFont}%
            {rus}{}%
        }[]%
        \addFont{#1}%
    }%
}%


%================================================
% COMMANDS TO VERIFY A TITLE HAS KEYS FOR .doc .toc .header
%================================================
\newbool{hasDoc}%
\newbool{hasToc}%
\newbool{hasHeader}%
\newbool{titleHasAllParts}%


\newcommand{\ltCheckTitles}[5]{%
\boolfalse{hasDoc}%
\boolfalse{hasToc}%
\boolfalse{hasHeader}%
\boolfalse{titleHasAllParts}%
	\pgfkeysifdefined{/#1/#2/#3/#4/#5.doc}{%
		\booltrue{hasDoc}%
		\pgfkeysifdefined{/#1/#2/#3/#4/#5.toc}{%
				\booltrue{hasToc}%
				\pgfkeysifdefined{/#1/#2/#3/#4/#5.header}{%
					\booltrue{hasHeader}%
					\booltrue{titleHasAllParts}%
					}{% 
						% false is already set
				}%
			}{% 
			% false is already set
		}%
		}{% 
		% false is already set
	}%
}%

%================================================
% KEY-VALUE RETRIEVAL COMMANDS
%================================================


\newcommand{\setup}[5]{%
    \pgfkeysifdefined{/#1/#2/#3/#4/#5}{%
            % ignore...good to go
    }{%
        \loadResource{#1}{#2}{#3}{#4}%
    }%
    \loadFont{#1}%
    \itSetPrimaryDomain{#1}{#2}{#3}%
    \IfStrEqCase{#1}{%
        {ara}{\arabicfont\setRTL}%
        {chu}{\slavonicfont}%
        {en}{}%
        {gr}{}%
        {heb}{\hebrewfont\setRTL}%
        {rus}{}%
    }[]%
}

\newcommand{\ltChapter}[2]{
    \ltGetChapter{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
    \ltChapterSubTitles{#1}{#2}
}

\newcommand{\ltChapterSubTitles}[2]{%
\begin{center}
    {\IfStrEqCase{\pgfkeysvalueof{\my/current/cols}}{%
        {1}{%  output one column
        }%
        {2}{% output two columns
            \ltGetSection{\pgfkeysvalueof{\my/current/right/language}}{\pgfkeysvalueof{\my/current/right/country}}{\pgfkeysvalueof{\my/current/right/realm}}{#1}{#2}%
        }%
        {3}{% output three columns
            \ltGetSection{\pgfkeysvalueof{\my/current/center/language}}{\pgfkeysvalueof{\my/current/center/country}}{\pgfkeysvalueof{\my/current/center/realm}}{#1}{#2}%
            \ltGetSection{\pgfkeysvalueof{\my/current/right/language}}{\pgfkeysvalueof{\my/current/right/country}}{\pgfkeysvalueof{\my/current/right/realm}}{#1}{#2}%
        }%
    }[]%
    }%
\end{center}
}

\newcommand{\ltGetChapter}[5]{%
\setup{#1}{#2}{#3}{#4}{#5}%
\ltCheckTitles{#1}{#2}{#3}{#4}{#5}%
\ifbool{titleHasAllParts}{%
\chapter[\itSid{#1}{#2}{#3}{#4}{#5.toc}]{\centering\itSid{#1}{#2}{#3}{#4}{#5.doc}}%
\chaptermark{\itSid{#1}{#2}{#3}{#4}{#5.header}}%
\setLTR%
}{%
\throwTitleError{#1}{#2}{#3}{#4}{#5}%
}%
}

\newcommand{\ltSection}[2]{
    {\IfStrEqCase{\pgfkeysvalueof{\my/current/cols}}{%
        {1}{%  output one column
        \ltGetSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                }%
        {2}{% output two columns
            \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
            \sloppy%
            \begin{paracol}{2}%
            	\begin{leftcolumn}%
                    \ltGetSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                \end{leftcolumn}%          
            	\begin{rightcolumn}%
                    \ltGetSection{\pgfkeysvalueof{\my/current/right/language}}{\pgfkeysvalueof{\my/current/right/country}}{\pgfkeysvalueof{\my/current/right/realm}}{#1}{#2}%
                \end{rightcolumn}%          
            \end{paracol}%
        }%
        {3}{% output three columns
            \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
            \sloppy%
            \begin{paracol}{3}%
                    \ltGetSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                \switchcolumn%
                    \ltGetSection{\pgfkeysvalueof{\my/current/center/language}}{\pgfkeysvalueof{\my/current/center/country}}{\pgfkeysvalueof{\my/current/center/realm}}{#1}{#2}%
                \switchcolumn%
                    \ltGetSection{\pgfkeysvalueof{\my/current/right/language}}{\pgfkeysvalueof{\my/current/right/country}}{\pgfkeysvalueof{\my/current/right/realm}}{#1}{#2}%
                \end{paracol}%
        }%
    }[]%
    }%
}

\newcommand{\ltGetSection}[5]{%
\setup{#1}{#2}{#3}{#4}{#5}%
\ltCheckTitles{#1}{#2}{#3}{#4}{#5}%
\ifbool{titleHasAllParts}{%
\section[\itSid{#1}{#2}{#3}{#4}{#5.toc}]{\centering\itSid{#1}{#2}{#3}{#4}{#5.doc}}%
\sectionmark{\itSid{#1}{#2}{#3}{#4}{#5.header}}%
\setLTR%
}{%
\throwTitleError{#1}{#2}{#3}{#4}{#5}%
}%
}

\newcommand{\ltSubSection}[2]{
    {\IfStrEqCase{\pgfkeysvalueof{\my/current/cols}}{%
        {1}{%  output one column
        \ltGetSubSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                }%
        {2}{% output two columns
            \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
            \sloppy%
            \begin{paracol}{2}%
            	\begin{leftcolumn}%
                    \ltGetSubSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                \end{leftcolumn}%          
            	\begin{rightcolumn}%
                    \ltGetSubSection{\pgfkeysvalueof{\my/current/right/language}}{\pgfkeysvalueof{\my/current/right/country}}{\pgfkeysvalueof{\my/current/right/realm}}{#1}{#2}%
                \end{rightcolumn}%          
            \end{paracol}%
        }%
        {3}{% output three columns
            \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
            \sloppy%
            \begin{paracol}{3}%
                    \ltGetSubSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                \switchcolumn%
                    \ltGetSubSection{\pgfkeysvalueof{\my/current/center/language}}{\pgfkeysvalueof{\my/current/center/country}}{\pgfkeysvalueof{\my/current/center/realm}}{#1}{#2}%
                \switchcolumn%
                    \ltGetSubSection{\pgfkeysvalueof{\my/current/right/language}}{\pgfkeysvalueof{\my/current/right/country}}{\pgfkeysvalueof{\my/current/right/realm}}{#1}{#2}%
                \end{paracol}%
        }%
    }[]%
    }%
}

\newcommand{\ltGetSubSection}[5]{%
\setup{#1}{#2}{#3}{#4}{#5}%
\ltCheckTitles{#1}{#2}{#3}{#4}{#5}%
\ifbool{titleHasAllParts}{%
\subsection[\itSid{#1}{#2}{#3}{#4}{#5.toc}]{\itSid{#1}{#2}{#3}{#4}{#5.doc}}%
\subsectionmark{\itSid{#1}{#2}{#3}{#4}{#5.header}}%
\setLTR%
}{%
\throwTitleError{#1}{#2}{#3}{#4}{#5}%
}%
}

\newcommand{\ltSubSubSection}[2]{
    {\IfStrEqCase{\pgfkeysvalueof{\my/current/cols}}{%
        {1}{%  output one column
        \ltGetSubSubSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                }%
        {2}{% output two columns
            \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
            \sloppy%
            \begin{paracol}{2}%
            	\begin{leftcolumn}%
                    \ltGetSubSubSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                \end{leftcolumn}%          
            	\begin{rightcolumn}%
                    \ltGetSubSubSection{\pgfkeysvalueof{\my/current/right/language}}{\pgfkeysvalueof{\my/current/right/country}}{\pgfkeysvalueof{\my/current/right/realm}}{#1}{#2}%
                \end{rightcolumn}%          
            \end{paracol}%
        }%
        {3}{% output three columns
            \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
            \sloppy%
            \begin{paracol}{3}%
                    \ltGetSubSubSection{\pgfkeysvalueof{\my/current/left/language}}{\pgfkeysvalueof{\my/current/left/country}}{\pgfkeysvalueof{\my/current/left/realm}}{#1}{#2}%
                \switchcolumn%
                    \ltGetSubSubSection{\pgfkeysvalueof{\my/current/center/language}}{\pgfkeysvalueof{\my/current/center/country}}{\pgfkeysvalueof{\my/current/center/realm}}{#1}{#2}%
                \switchcolumn%
                    \ltGetSubSubSection{\pgfkeysvalueof{\my/current/right/language}}{\pgfkeysvalueof{\my/current/right/country}}{\pgfkeysvalueof{\my/current/right/realm}}{#1}{#2}%
                \end{paracol}%
        }%
    }[]%
    }%
}

\newcommand{\ltGetSubSubSection}[5]{%
\setup{#1}{#2}{#3}{#4}{#5}%
\ltCheckTitles{#1}{#2}{#3}{#4}{#5}%
\ifbool{titleHasAllParts}{%
\subsubsection[\itSid{#1}{#2}{#3}{#4}{#5.toc}]{\itSid{#1}{#2}{#3}{#4}{#5.doc}}%
\subsubsectionmark{\itSid{#1}{#2}{#3}{#4}{#5.header}}%
\setLTR%
}{%
\throwTitleError{#1}{#2}{#3}{#4}{#5}%
}%
}

\newcommand{\ltGetTitle}[6]{
\setup{#1}{#2}{#3}{#4}{#5}%
\pgfkeysifdefined{/#1/#2/#3/#4/#5.doc}{%
\expandafter{\csname #6\endcsname}[\itSid{#1}{#2}{#3}{#4}{#5.toc}]{\itSid{#1}{#2}{#3}{#4}{#5.doc}}%
\expandafter{\csname #6mark\endcsname}{\itSid{#1}{#2}{#3}{#4}{#5.header}}%
\setLTR%
}{%
\throwTitleError{#1}{#2}{#3}{#4}{#5}%
}%
}

\newcommand{\throwTitleError}[5]{%
	\pgfkeysifdefined{/#1/#2/#3/#4/#5.doc}{
			% do nothing
		}{ % else throw doc error
	        \PackageError{%
    			    ocmc-liturgical-text}{Missing .doc for ‘/#1/#2/#3/#4/#5’.%
        		}{%
        			Open resource file for /#1/#2/#3/#4 and add .doc key for #5.%
        		}%
	}
	\pgfkeysifdefined{/#1/#2/#3/#4/#5.toc}{
			% do nothing
		}{ % else throw toc error
	        \PackageError{%
    			    ocmc-liturgical-text}{Missing .toc for ‘/#1/#2/#3/#4/#5’.%
        		}{%
        			Open resource file for /#1/#2/#3/#4 and add .toc key for #5.%
        		}%
	}
	\pgfkeysifdefined{/#1/#2/#3/#4/#5.header}{
			% do nothing
		}{ % else throw header error
	        \PackageError{%
    			    ocmc-liturgical-text}{Missing .header for ‘/#1/#2/#3/#4/#5’.%
        		}{%
        			Open resource file for /#1/#2/#3/#4 and add .header key for #5.%
        		}%
	}
}

\newcommand{\ltGetVal}[5]{%
\setup{#1}{#2}{#3}{#4}{#5}%
\itSid{#1}{#2}{#3}{#4}{#5}%
\setLTR%
}

\newcommand\ltSid[2]{%
    {\IfStrEqCase{\pgfkeysvalueof{\my/current/cols}}{%
    {1}{%  output one column
			\ltTypeography{}%
            \ltGetColVal{left}{#1}{#2}%
             \ltTempTypeographyDefault%
        }%
    {2}{% output two columns
        \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
        \sloppy%
        \begin{paracol}{2}%
        	\begin{leftcolumn}%
			\ltTypeography{}%
            \ltGetColVal{left}{#1}{#2}%
            \ltTempTypeographyDefault%
            \end{leftcolumn}%          
        	\begin{rightcolumn}%
			\ltTypeography{}%
            \ltGetColVal{right}{#1}{#2}%         
            \ltTempTypeographyDefault%
            \end{rightcolumn}%          
        \end{paracol}%
    }%
    {3}{% output three columns
        \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
        \sloppy%
        \begin{paracol}{3}%
            \ltGetColVal{left}{#1}{#2}%          
            \switchcolumn%
            \ltGetColVal{center}{#1}{#2}%          
            \switchcolumn%
            \ltGetColVal{right}{#1}{#2}%          
        \end{paracol}%
    }%
}[]%
}%
}

%================================================
% LITURGICAL FORMATTING COMMANDS
%================================================
\newcommand\ltAsterisksLine{{\small\color{red}\leavevmode\xleaders\hbox{$\ast$}\hfill\kern0pt\normalsize\color{black}\smallbreak}}

% this doesn't quite work yet with multilingual
\newcommand\ltCommentBox[1]{
%    \medskip%
    \noindent\fcolorbox{red}{white}{%
    \minipage[t]{\dimexpr0.98\linewidth\fboxsep\fboxrule\relax}
    #1%
    \endminipage}\hfill%
%    \medskip%
}

\newcommand\ltActor[1]{%
    \ltSetTypeography{%
    \ltTextRed%
    }%
    #1%
}

\newcommand\ltBlack[1]{%
\ltSetTypeography{%
\ltColor{black}%
}%
#1%
}%
\newcommand\ltCover[1]{\ltSetTypeographyDefault\huge{#1}}%

\DeclareDocumentCommand\ltDesignation{ m m g g g g g g}{%
    \ltSidsFormat{\ltTextRedItalics}{\ltTextRedItalics}{\ltTextRedItalics}{\ltTextRedItalics}%
    \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
}

\DeclareDocumentCommand\ltDialog{m m g g g g g g}{%
    \ltSidsFormat{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}%
    \IfValueTF{#7}{%
        \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
    }{%
        \IfValueTF{#5}{%
            \ltSids{#1}{#2}{#3}{#4}{#5}{#6}%
        }{%
            \IfValueTF{#3}{%
                \ltSids{#1}{#2}{#3}{#4}%
            }{%
                \ltSetTypeographyDefault{}%
                \ltSid{#1}{#2}%
            }%
        }%
    }%
}%

% Call this if you do not want dialog to set its 
% own format
\DeclareDocumentCommand\ltDialogNoFormat{m m g g g g g g}{%
    \IfValueTF{#7}{%
        \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
    }{%
        \IfValueTF{#5}{%
            \ltSids{#1}{#2}{#3}{#4}{#5}{#6}%
        }{%
            \IfValueTF{#3}{%
                \ltSids{#1}{#2}{#3}{#4}%
            }{%
                \ltSetTypeographyDefault{}%
                \ltSid{#1}{#2}%
            }%
        }%
    }%
}%

\DeclareDocumentCommand\ltHymn{ m m g g g g g g}{%
    \ltSidsFormat{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}%
    \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
}

\DeclareDocumentCommand\ltHymnNoFormat{ m m g g g g g g}{%
\ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
}

\DeclareDocumentCommand\ltHymnLastLine{ m m g g g g g g}{%
    \ltSidsFormat{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}%
    \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
}

\newcommand\ltInaudible[1]{\ltSetTypeographyDefault{}#1}%
\newcommand\ltTitle[1]{\ltSetTypeographyDefault{}#1}
\newcommand\ltMelody[1]{\ltSetTypeographyDefault{}#1}
\newcommand\ltMixed[1]{\ltSetTypeographyDefault{}#1}
\newcommand\ltMode[1]{\ltSetTypeographyDefault{}#1}

\DeclareDocumentCommand\ltReading{ m m g g g g g g}{%
    \ltSidsFormat{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}%
    \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
}

\newcommand\ltRed[1]{%
\ltSetTypeography{%
\ltColor{red}%
}%
#1%
}%

\DeclareDocumentCommand\ltVerse{ m m g g g g g g}{%
    \ltSidsFormat{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}%
    \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
}



\newcommand{\ltSetNumberColumns}[1]{%
    \pgfkeys{%
        \my/current/cols = #1%
    }%
}
\newcommand{\ltSetPrimaryDomain}[3]{%
\pgfkeys{\my/domains/left = /#1/#2/#3}%
\pgfkeys{\my/current/left/.cd%
 , language = #1%
 , country = #2%
 , realm = #3%
 }%
 \itSetPrimaryDomain{#1}{#2}{#3}
}
\newcommand{\ltSetCenterDomain}[3]{%
\pgfkeys{\my/domains/center = /#1/#2/#3}%
\pgfkeys{\my/current/center/.cd%
 , language = #1%
 , country = #2%
 , realm = #3%
 }%
}
\newcommand{\ltSetRightDomain}[3]{%
\pgfkeys{\my/domains/right = /#1/#2/#3}%
\pgfkeys{\my/current/right/.cd%
 , language = #1%
 , country = #2%
 , realm = #3%
 }%
}

\newcommand\ltColumnSeparatorColor[1]{\pgfkeys{\my/column/separator/rule/color = #1}}

% Calls ltGetVal for specified column, i.e. left, center, right
% if the topic is actors and we are not putting the actor on
% a separate line, it gets the colon version
\newcommand\ltGetColVal[3]{%
%    \IfStrEq{#2}{actors}{%
%        \ifdef{\actorOnSeparateLine}{%
%            \ltGetVal{\ltGetLanguage{#1}}{\ltGetCountry{#1}}{\ltGetRealm{#1}}{#2}{#3}%
%        }{%
%            \IfEndWith{#3}{colon}{%
%                \ltGetVal{\ltGetLanguage{#1}}{\ltGetCountry{#1}}{\ltGetRealm{#1}}{#2}{#3}%
%            }{%
%                \ltGetVal{\ltGetLanguage{#1}}{\ltGetCountry{#1}}{\ltGetRealm{#1}}{#2}{#3.colon}%                
%            }%
%        }%
%    }{%
        \ltGetVal{\ltGetLanguage{#1}}{\ltGetCountry{#1}}{\ltGetRealm{#1}}{#2}{#3}%
%    }%
}%

\newcommand{\ltGetLanguage}[1]{%
\pgfkeysvalueof{\my/current/#1/language}%
}%

\newcommand{\ltGetCountry}[1]{%
\pgfkeysvalueof{\my/current/#1/country}%
}%

\newcommand{\ltGetRealm}[1]{%
\pgfkeysvalueof{\my/current/#1/realm}%
}

\newcommand{\loadResourceForSid}[1]{%
\loadResource{\langPrimary}{\countryPrimary}{\realmPrimary}{#1}%
\loadResource{\langSecondary}{\countrySecondary}{\realmSecondary}{#1}%
}
%=========================================================
% Global Settings
%=========================================================
\setlength{\parindent}{0em} % turns off indenting of paragraphs.  Comment out to turn on.
\setlength{\parskip}{1em}  % spacing between paragraphs 0.5 is usual
\setlength{\JustifyingParindent}{0em} % turns off indenting of paragraphs.  Comment out to turn on.
\setlength{\JustifyingParfillskip}{0.5em}  % spacing between paragraphs 0.5 is usual
\setsecnumdepth{none}
\maxsecnumdepth{none}
\titleformat{\section}[block]{\color{blue}\Large\bfseries\filcenter}{}{1em}{}
\pagestyle{ruled}
\makeevenhead{ruled}{}{\rightmark}{\thepage}
\makeoddhead{ruled}{\thepage}{\leftmark}{}
\makeevenfoot{ruled}{}{}{}
\makeoddfoot{ruled}{}{}{}

\ifdef{\showLineNumbers}{%
\usepackage{lineno}%
\linenumbers%
}

%================================================
% SID APPENDERS for each COLUMN
%================================================

\def\ltLeftAppended{}
\def\ltCenterAppended{}
\def\ltRightAppended{}

\newcommand{\ltAppendLeft}[1]{%
\edef\ltLeftAppended{\ltLeftAppended{} #1}%
}
\newcommand{\ltClearLeft}{%
\edef\ltLeftAppended{}
}

\newcommand{\ltAppendCenter}[1]{%
\edef\ltCenterAppended{\ltCenterAppended{} #1}%
}
\newcommand{\ltClearCenter}{%
\edef\ltCenterAppended{}
}

\newcommand{\ltAppendRight}[1]{%
\edef\ltRightAppended{\ltRightAppended{} #1}%
}
\newcommand{\ltClearRight}{%
\edef\ltRightAppended{}%
}

%================================================
% MULTI SID -- NEEDED FOR MULTILINGUAL TEXT
%================================================
\def\theLeft{}
\def\theCenter{}
\def\theRight{}

\def\sidOneFormat{}
\def\sidTwoFormat{}
\def\sidThreeFormat{}
\def\sidFourFormat{}

\newcommand{\ltAppendersReset}{%
    \global\def\theLeft{}% set to be empty
    \global\def\theCenter{}% set to be empty
    \global\def\theRight{}% set to be empty
}
\DeclareDocumentCommand\ltSids{m m m m g g g g } {%
    \ltAppendersReset%
    \ltSidsAppendersLeft{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
    {\IfStrEqCase{\pgfkeysvalueof{\my/current/cols}}{%
        {1}{%  output one column
            }%
        {2}{% output two columns
            \ltSidsAppendersRight{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
            }%
        {3}{% output three columns
            \ltSidsAppendersCenter{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
            \ltSidsAppendersRight{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
            }%
    }[]%
    }%    
    \ltFormatThree{\theLeft}{\theCenter}{\theRight}%
}

\DeclareDocumentCommand\ltSidsAppendersLeft{m m m m g g g g } {%
    \global\def\theLeft{}% first set to be empty
    \IfValueTF{#7}{%
        \global\def\theLeft{\sidOneFormat\ltGetColVal{left}{#1}{#2} \sidTwoFormat\ltGetColVal{left}{#3}{#4} \sidThreeFormat\ltGetColVal{left}{#5}{#6} \sidFourFormat\ltGetColVal{left}{#7}{#8}}%
    }{%
        \IfValueTF{#5}{%
            \global\def\theLeft{\sidOneFormat\ltGetColVal{left}{#1}{#2} \sidTwoFormat\ltGetColVal{left}{#3}{#4} \sidThreeFormat\ltGetColVal{left}{#5}{#6}}%
        }{%
            \IfValueTF{#3}{%
                \global\def\theLeft{\sidOneFormat\ltGetColVal{left}{#1}{#2} \sidTwoFormat\ltGetColVal{left}{#3}{#4}}%
            }{%
                \global\def\theLeft{\sidOneFormat\ltGetColVal{left}{#1}{#2}}%
            }%
        }%
    }%
}

\DeclareDocumentCommand\ltSidsAppendersCenter{m m m m g g g g } {%
    \global\def\theCenter{}% first set to be empty
    \IfValueTF{#7}{%
        \global\def\theCenter{\sidOneFormat\ltGetColVal{center}{#1}{#2} \sidTwoFormat\ltGetColVal{center}{#3}{#4} \sidThreeFormat\ltGetColVal{center}{#5}{#6} \sidFourFormat\ltGetColVal{center}{#7}{#8}}%
    }{%
        \IfValueTF{#5}{%
            \global\def\theCenter{\sidOneFormat\ltGetColVal{center}{#1}{#2} \sidTwoFormat\ltGetColVal{center}{#3}{#4} \sidThreeFormat\ltGetColVal{center}{#5}{#6}}%
        }{%
            \IfValueTF{#3}{%
                \global\def\theCenter{\sidOneFormat\ltGetColVal{center}{#1}{#2} \sidTwoFormat\ltGetColVal{center}{#3}{#4}}%
            }{%
                \global\def\theCenter{\sidOneFormat\ltGetColVal{center}{#1}{#2}}%
            }%
        }%
    }%
}

\DeclareDocumentCommand\ltSidsAppendersRight{m m m m g g g g } {%
    \global\def\theRight{}% first set to be empty
    \IfValueTF{#7}{%
        \global\def\theRight{\sidOneFormat\ltGetColVal{right}{#1}{#2} \sidTwoFormat\ltGetColVal{right}{#3}{#4} \sidThreeFormat\ltGetColVal{right}{#5}{#6} \sidFourFormat\ltGetColVal{right}{#7}{#8}}%
    }{%
        \IfValueTF{#5}{%
            \global\def\theRight{\sidOneFormat\ltGetColVal{right}{#1}{#2} \sidTwoFormat\ltGetColVal{right}{#3}{#4} \sidThreeFormat\ltGetColVal{right}{#5}{#6}}%
        }{%
            \IfValueTF{#3}{%
                \global\def\theRight{\sidOneFormat\ltGetColVal{right}{#1}{#2} \sidTwoFormat\ltGetColVal{right}{#3}{#4}}%
            }{%
                \global\def\theRight{\sidOneFormat\ltGetColVal{right}{#1}{#2}}%
            }%
        }%
    }%
}

% sets the multiple sid format to be empty
\newcommand{\ltSidsFormatReset}{%
    \global\def\sidOneFormat{}%
    \global\def\sidTwoFormat{}%
    \global\def\sidThreeFormat{}%
    \global\def\sidFourFormat{}%
}

% Sets the format for up to four sids
% Must be called prior to \ltSids if want special format
\DeclareDocumentCommand\ltSidsFormat{m g g g } {%
    \ltSidsFormatReset%
    {\global\def\sidOneFormat{#1}%
        \IfNoValueF {#2} {\global\def\sidTwoFormat{#2}}%
        \IfNoValueF {#3} {\global\def\sidThreeFormat{#3}}%
        \IfNoValueF {#4} {\global\def\sidFourFormat{#4}}%
    }%
}

\DeclareDocumentCommand\ltActorDialog{m m m m g g g g}{%
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}%
        \ifdef{\actorOnSeparateLine}{%
        \ltActor{\ltSid{#1}{#2}}%
        
        \ltDialogNoFormat{#3}{#4}{#5}{#6}{#7}{#8}%
    }{%
        \ltSids{#1}{#2.colon}{#3}{#4}{#5}{#6}{#7}{#8}%
    }%
}

\DeclareDocumentCommand\ltActorDialogLowVoice{ m m m m g g }{%
    \ifdef{\actorOnSeparateLine}{%
        \ltActor{\ltSid{#1}{#2}}%
        
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextBlack}%
        \ltDialogNoFormat{rubrical}{InALowVoice}{#3}{#4}{#5}{#6}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}{\ltTextBlack}%
        \ltSids{#1}{#2}{actors}{InALowVoice.colon}{#3}{#4}{#5}{#6}%
    }%
}
\DeclareDocumentCommand\ltRubric{ m m g g g g g g}{%
    \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextRed}{\ltTextRed}%
    \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
}

\DeclareDocumentCommand\ltRubricDialogLowVoice{ m m m m g g }{%
    \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}%
    \ltSids{#1}{#2}{rubrical}{InALowVoice.colon}{#3}{#4}{#5}{#6}%
}
\DeclareDocumentCommand\ltRubricDialogAloud{ m m m m g g }{%
    \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}%
    \ltSids{#1}{#2}{rubrical}{Aloud.colon}{#3}{#4}{#5}{#6}%
}
\DeclareDocumentCommand\ltActorDialogAloud{ m m m m g g }{%
    \ifdef{\actorOnSeparateLine}{%
        \ltActor{\ltSid{#1}{#2}}%
        
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}%
        \ltDialogNoFormat{rubrical}{Aloud}{#3}{#4}{#5}{#6}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}%
        \ltSids{#1}{#2}{actors}{Aloud.colon}{#3}{#4}{#5}{#6}%
    }%
}
% Only supports one topic-key for the Dialog
\DeclareDocumentCommand\ltActorDialogLowVoiceRubric{ m m m m m m }{%
    \ifdef{\actorOnSeparateLine}{%
        \ltActor{\ltSid{#1}{#2}}%
        
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextRed}%
        \ltDialogNoFormat{rubrical}{InALowVoice}{#3}{#4}{#5}{#6}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}{\ltTextRed}%
        \ltSids{#1}{#2}{actors}{InALowVoice.colon}{#3}{#4}{#5}{#6}%
    }%
}

\newcommand{\ltActorRubricDialog}[6]{%
    \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}%
    \ifdef{\actorOnSeparateLine}{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}%
        \ltSids{#1}{#2}{#3}{#4}%
        
        \ltDialogNoFormat{#5}{#6}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}
        \ltSids{#1}{#2.colon}{#3}{#4}{#5}{#6}%
    }%
}

\newcommand{\ltRubricDialog}[4]{%
    \ltSidsFormat{\ltTextRed}{\ltTextBlack}
    \ltSids{#1}{#2}{#3}{#4}%
}

\newcommand{\ltRubricDialogRubric}[6]{%
    \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextRed}%
    \ltSids{#1}{#2}{#3}{#4}{#5}{#6}%
}

\newcommand{\ltRubricDialogRubricDialog}[8]{%
    \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextRed}{\ltTextBlack}%
    \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
}

\newcommand{\ltDialogAloud}[2]{%
    \ltSidsFormat{\ltTextRed}{\ltTextBlack}%
    \ltSids{rubrical}{Aloud}{#1}{#2}%
}

\newcommand{\ltDialogLowVoice}[2]{%
    \ltSidsFormat{\ltTextRed}{\ltTextBlack}%
    \ltSids{rubrical}{InALowVoice}{#1}{#2}%
}

\newcommand{\ltActorDialogRubric}[6]{%
    \ifdef{\actorOnSeparateLine}{%
        \ltActor{\ltSid{#1}{#2}}%
        
        \ltSidsFormat{\ltTextBlack}{\ltTextRed}%
        \ltDialogNoFormat{#3}{#4}{#5}{#6}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextRed}%
        \ltSids{#1}{#2.colon}{#3}{#4}{#5}{#6}%
    }%
}
\newcommand{\ltActorRubricDialogRubric}[8]{%
    \ifdef{\actorOnSeparateLine}{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}%
        \ltSids{#1}{#2}{#3}{#4}%
        
        \ltSidsFormat{\ltTextBlack}{\ltTextRed}%
        \ltDialogNoFormat{#5}{#6}{#7}{#8}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}{\ltTextRed}%
        \ltSids{#1}{#2.colon}{#3}{#4}{#5}{#6}{#7}{#8}%
    }%
}

\newcommand{\ltActorDialogRubricDialog}[8]{%
    \ifdef{\actorOnSeparateLine}{%
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}%
        \ltSids{#1}{#2}{#3}{#4}%
        
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}%
        \ltDialogNoFormat{#5}{#6}{#7}{#8}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextRed}{\ltTextBlack}%
        \ltSids{#1}{#2.colon}{#3}{#4}{#5}{#6}{#7}{#8}%
    }%
}

\newcommand{\ltActorHymn}[4]{%
    \ltSidsFormat{\ltTextRed}{\ltTextBlack}
    \ifdef{\actorOnSeparateLine}{%
        \ltActor{\ltSid{#1}{#2}}%
        
        \ltHymnNoFormat{#3}{#4}%
    }{%
        \ltHymnNoFormat{#1}{#2.colon}{#3}{#4}%
    }%
}

\newcommand{\ltActorReading}[4]{%
    \ltSidsFormat{\ltTextRed}{\ltTextBlack}
    \ifdef{\actorOnSeparateLine}{%
        \ltActor{\ltSid{#1}{#2}}%
        
        \ltReading{#3}{#4}%
    }{%
        \ltReading{#1}{#2.colon}{#3}{#4}%
    }%
}

\newcommand{\ltActorRubricHymn}[6]{%
    \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}%
    \ifdef{\actorOnSeparateLine}{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}%
        \ltSids{#1}{#2}{#3}{#4}%
        
        \ltDialogNoFormat{#5}{#6}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}
        \ltSids{#1}{#2}{#3}{#4}{#5}{#6}%
    }%
}
\newcommand{\ltActorHymnRubric}[6]{%
    \ifdef{\actorOnSeparateLine}{%
        \ltActor{\ltSid{#1}{#2}}%
        
        \ltSidsFormat{\ltTextBlack}{\ltTextRed}%
        \ltHymnNoFormat{#3}{#4}{#5}{#6}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextRed}%
        \ltSids{#1}{#2.colon}{#3}{#4}{#5}{#6}%
    }%
}

\newcommand{\ltActorRubricHymnRubric}[8]{%
    \ifdef{\actorOnSeparateLine}{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}%
        \ltSids{#1}{#2}{#3}{#4}%
        
        \ltSidsFormat{\ltTextBlack}{\ltTextRed}%
        \ltHymnNoFormat{#5}{#6}{#7}{#8}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}{\ltTextBlack}{\ltTextRed}%
        \ltSids{#1}{#2.colon}{#3}{#4}{#5}{#6}{#7}{#8}%
    }%
}

\newcommand{\ltActorHymnHymnRubric}[8]{%
    \ifdef{\actorOnSeparateLine}{%
        \ltSidsFormat{\ltTextRed}{\ltTextRed}%
        \ltSids{#1}{#2}{#3}{#4}%
        
        \ltSidsFormat{\ltTextBlack}{\ltTextBlack}{\ltTextRed}%
        \ltHymnNoFormat{#5}{#6}{#7}{#8}%
    }{%
        \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextBlack}{\ltTextRed}%
        \ltSids{#1}{#2.colon}{#3}{#4}{#5}{#6}{#7}{#8}%
    }%
}

\DeclareDocumentCommand\ltHymnRubric{m m m m g g g g} {%
    \ltSidsFormatReset%
    {\global\def\sidOneFormat{#1}%
        \IfValueTF {#7}{%
            \ltSidsFormat{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}{\ltTextRed}%
            \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
        }{%
            \IfValueTF {#5}{%
            \ltSidsFormat{\ltTextBlack}{\ltTextBlack}{\ltTextRed}%
            \ltSids{#1}{#2}{#3}{#4}{#5}{#6}%
            }{%
            \ltSidsFormat{\ltTextBlack}{\ltTextRed}%
            \ltSids{#1}{#2}{#3}{#4}%
            }%
        }%
    }%
    \ltSidsFormatReset%
}
\DeclareDocumentCommand\ltRubricHymn{m m m m g g g g} {%
    \ltSidsFormatReset%
    {\global\def\sidOneFormat{#1}%
        \IfValueTF {#7}{%
            \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextBlack}{\ltTextBlack}%
            \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
        }{%
            \IfValueTF {#5}{%
            \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextBlack}%
            \ltSids{#1}{#2}{#3}{#4}{#5}{#6}%
            }{%
            \ltSidsFormat{\ltTextRed}{\ltTextBlack}%
            \ltSids{#1}{#2}{#3}{#4}%
            }%
        }%
    }%
    \ltSidsFormatReset%
}
\DeclareDocumentCommand\ltStichos{m m m m g g g g} {%
    \ltSidsFormatReset%
    {\global\def\sidOneFormat{#1}%
        \IfValueTF {#7}{%
            \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextBlack}{\ltTextRed}%
            \ltSids{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}%
        }{%
            \IfValueTF {#5}{%
            \ltSidsFormat{\ltTextRed}{\ltTextBlack}{\ltTextRed}%
            \ltSids{#1}{#2}{#3}{#4}{#5}{#6}%
            }{%
            \ltSidsFormat{\ltTextRed}{\ltTextBlack}%
            \ltSids{#1}{#2}{#3}{#4}%
            }%
        }%
    }%
    \ltSidsFormatReset%
}

% Takes three argument: left, center, right
% and outputs them as columns
\newcommand\ltFormatThree[3]{%
    {\IfStrEqCase{\pgfkeysvalueof{\my/current/cols}}{%
    {1}{%  output one column    
			\ltTypeography{}%
			#1
            \ltTempTypeographyDefault%
        }%
    {2}{% output two columns
        \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
        \sloppy%
        \begin{paracol}{2}%
        	\begin{leftcolumn}%
			\ltTypeography{}%
			#1
            \ltTempTypeographyDefault%
            \end{leftcolumn}%          
        	\begin{rightcolumn}%
			\ltTypeography{}%
			#3
            \ltTempTypeographyDefault%
            \end{rightcolumn}%          
        \end{paracol}%
    }%
    {3}{% output three columns
        \colseprulecolor{\pgfkeysvalueof{\my/column/separator/rule/color}}%
        \sloppy%
        \begin{paracol}{3}%
			\ltTypeography{}%
			#1
            \ltTempTypeographyDefault%
            \switchcolumn%
			\ltTypeography{}%
			#2
            \ltTempTypeographyDefault%
            \switchcolumn%
			\ltTypeography{}%
			#3
            \ltTempTypeographyDefault%
        \end{paracol}%
    }%
}[]%
}%
}

\endinput

